<!-- Resource dictionary used by the MainWindow. -->
<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:vm="clr-namespace:Restless.App.Panama.ViewModel"
    xmlns:vw="clr-namespace:Restless.App.Panama.View"
    xmlns:con="clr-namespace:Restless.App.Panama.Controls">

    <!-- Style for border separator -->
    <Style TargetType="Border" x:Key="MainBorderSeparator">
        <Setter Property="Background" Value="#80DDDDDD" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="Height" Value="2"/>
        <Setter Property="CornerRadius" Value="0" />
        <Setter Property="Margin" Value="0,4,0,-6" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
    </Style>
    <!-- Brush used for text block opener -->
    <LinearGradientBrush x:Key="OpenerBrush" StartPoint="0.00,0.00" EndPoint="1.00,0.00">
        <GradientBrush.GradientStops>
            <GradientStopCollection>
                <GradientStop Color="#FF0000FF" Offset="0.000"/>
                <GradientStop Color="#FFFF0000" Offset="0.500"/>
                <GradientStop Color="#FF00FF00" Offset="1.000"/>
            </GradientStopCollection>
        </GradientBrush.GradientStops>
    </LinearGradientBrush>

    <!-- Style for text block opener -->
    <Style TargetType="TextBlock" x:Key="TextBlockOpener">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="FontSize" Value="60" />
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="FontStyle" Value="Italic"/>
        <Setter Property="FontStretch" Value="UltraExpanded"/>
        <Setter Property="Foreground" Value="{StaticResource OpenerBrush}"/>
        <Setter Property="FontFamily" Value="Calibri"/>
        <Setter Property="Opacity" Value="0.30"/>
    </Style>
    
    <Style TargetType="Image" x:Key="ImageOpener">
        <Setter Property="Height" Value="24"/>
        <Setter Property="Width" Value="24"/>
        <Setter Property="Opacity" Value="0.45"/>
    </Style>
    
    <!-- This template explains how to render a tab item with a close button. -->
    <DataTemplate x:Key="ClosableTabItemTemplate">
        <DockPanel Width="116" Height="20">
            <Button
                Command="{Binding Path=CloseCommand}"
                Content="X"
                DockPanel.Dock="Right"
                Width="16" Height="16"
                VerticalAlignment="Top"
                Style="{StaticResource ToolBarButton}">
            </Button>
            <ContentPresenter Content="{Binding Path=TabDisplayName}" />
        </DockPanel>
    </DataTemplate>

    <!-- This template explains how to render the 'Workspace' content area in the main window.  -->
    <DataTemplate x:Key="WorkspacesTemplate">
        <con:TabControlExtended
            Margin="4"
            AllowTabReorder="True"
            AllowTabTear="False"
            Focusable="False" 
            IsSynchronizedWithCurrentItem="True"
            TornItem="{Binding MainViewModel.TornItem, Mode=OneWayToSource}"
            ItemsSource="{Binding}" ItemTemplate="{StaticResource ClosableTabItemTemplate}" />
    </DataTemplate>

    <!--<DataTemplate x:Key="WorkspacesTemplate">
        <ct:ChromeTabControl
            Margin="4"
            Focusable="False" 
            TabPersistBehavior="All"
            IsAddButtonVisible="False"
            CloseTabCommand="{Binding CloseCommand}"
            IsSynchronizedWithCurrentItem="True"
            ItemsSource="{Binding}" 
            ItemTemplate="{StaticResource ClosableTabItemTemplate}"
            />
    </DataTemplate>-->

    <!-- Base style for StatusBar -->
    <Style TargetType="StatusBar">
        <Setter Property="Background" Value="{StaticResource StatusBarBrush}"/>
        <Setter Property="Margin" Value="0,1,0,0"/>
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="BorderBrush" Value="LightGray" />
    </Style>
    
    <!-- TextBlock used in a StatusBar-->
    <Style TargetType="TextBlock" x:Key="StatusBar">
        <Setter Property="Margin" Value="3,0" />
        <Setter Property="FontSize" Value="11.5" />
        <Setter Property="Foreground" Value="Black" />
    </Style>
    
    <Style TargetType="TextBlock" x:Key="StatusBarNotificationMessage" BasedOn="{StaticResource StatusBar}">
        <Setter Property="Text" Value="{Binding Path=NotificationMessage, NotifyOnTargetUpdated=True}" />
        <Style.Triggers>
            <EventTrigger RoutedEvent="Binding.TargetUpdated">
                <BeginStoryboard>
                    <Storyboard>
                        <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="Opacity">
                            <EasingDoubleKeyFrame KeyTime="0" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:5" Value="1"/>
                            <EasingDoubleKeyFrame KeyTime="0:0:5.5" Value="0"/>
                        </DoubleAnimationUsingKeyFrames>
                    </Storyboard>
                </BeginStoryboard>
            </EventTrigger>
        </Style.Triggers>
    </Style>    
</ResourceDictionary>