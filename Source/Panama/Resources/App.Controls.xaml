<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:con="clr-namespace:Restless.App.Panama.Controls"
    xmlns:vw="clr-namespace:Restless.App.Panama.View"
    xmlns:vm="clr-namespace:Restless.App.Panama.ViewModel"
    >
    <!-- Style for a tool bar style button. -->
    <Style TargetType="Button" x:Key="ToolBarButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="0,0,-2,0" />
        <Setter Property="FontFamily" Value="Courier" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Foreground" Value="DarkGray" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="MaxWidth" Value="32" />
        <Setter Property="MaxHeight" Value="32" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0" CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Teal"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" x:Key="MainMenuButton" BasedOn="{StaticResource ToolBarButton}">
        <Setter Property="Foreground" Value="DarkBlue" />
        <Setter Property="FontWeight" Value="Normal" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFEEEEEE"/>
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <Style TargetType="MenuItem">
        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5" />
            </Trigger>
        </Style.Triggers>
    </Style>
    
    <DataTemplate x:Key="ICMenuItemTemplate">
        <Button Style="{StaticResource MainMenuButton}" ToolTip="{Binding TooltipText}" Command="{Binding Path=Command}" Margin="1,2" MinWidth="132" Height="{Binding Path=ButtonSize}" Cursor="Hand">
            <StackPanel Orientation="Horizontal">
                <Image Source="{Binding Path=Icon}" Height="{Binding Path=ImageSize}">
                    <Image.Style>
                        <Style TargetType="Image">
                            <Style.Triggers>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="Opacity" Value="0.5" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Image.Style>
                </Image>
                <TextBlock Text="{Binding Path=DisplayName}" FontSize="{Binding FontSize}" Margin="5,0"  VerticalAlignment="Center"/>
            </StackPanel>
        </Button>
    </DataTemplate>
    
    <Style TargetType="ItemsControl" x:Key="ICMenuItems">
        <Setter Property="ItemsPanel">
            <Setter.Value>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal" Margin="4"/>
                </ItemsPanelTemplate>
            </Setter.Value>
        </Setter>
        <Setter Property="ItemTemplate" Value="{StaticResource ICMenuItemTemplate}"/>
    </Style>

    <Style TargetType="{x:Type con:TabControlExtended}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TabControl}">
                    <Grid x:Name="MainGrid" Background="{TemplateBinding Background}" ClipToBounds="True" KeyboardNavigation.TabNavigation="Local" SnapsToDevicePixels="True">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <TabPanel x:Name="HeaderPanel" Margin="2,5,0,0" VerticalAlignment="Stretch" Panel.ZIndex="1" IsItemsHost="True" KeyboardNavigation.TabIndex="1" Background="Transparent" />

                        <Border x:Name="ContentPanel" Grid.Row="1" Grid.Column="0"
                                Background="{TemplateBinding Background}"
                                VerticalAlignment="Stretch"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                BorderThickness="{TemplateBinding BorderThickness}"
                                Padding="4,6"
                                KeyboardNavigation.DirectionalNavigation="Contained" KeyboardNavigation.TabIndex="2" KeyboardNavigation.TabNavigation="Local">
                            <Grid x:Name="PART_ItemsHolder" Margin="{TemplateBinding Margin}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="False">
                            <Setter TargetName="MainGrid" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- TabItem. Makes the selected one stand out  -->
    <Style TargetType="TabItem">
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Foreground" Value="ForestGreen" />
            </Trigger>
            <Trigger Property="IsSelected" Value="False">
                <Setter Property="Foreground" Value="DarkGray" />
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>