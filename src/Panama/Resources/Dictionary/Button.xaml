<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:tk="http://schemas.restless.toolkit.com/2021">

    <Style x:Key="DefaultIconButtonStyle" TargetType="tk:IconButton">
        <Setter Property="Height" Value="26"/>
        <Setter Property="Margin" Value="3,0"/>
        <Setter Property="Padding" Value="8,4"/>
        <Setter Property="IconPadding" Value="4"/>
        <Setter Property="VerticalIconAlignment" Value="Center"/>
        <Setter Property="HorizontalIconAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="HorizontalContentAlignment" Value="Right"/>
        <Setter Property="HorizontalPressedMovement" Value="2.0"/>
        <Setter Property="VerticalPressedMovement" Value="0"/>
        <Setter Property="CornerRadius" Value="1"/>
        <Setter Property="Background" Value="{StaticResource ActionButtonBackgroundBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource ActionButtonForegroundBrush}"/>
        <Setter Property="RolloverBrush" Value="{StaticResource ActionButtonRolloverBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource LightBorderBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style TargetType="tk:IconButton" BasedOn="{StaticResource DefaultIconButtonStyle}"/>

    <Style x:Key="SmallIconButtonStyle" TargetType="tk:IconButton" BasedOn="{StaticResource DefaultIconButtonStyle}">
        <Setter Property="Height" Value="23"/>
        <Setter Property="IconPadding" Value="4"/>
        <Setter Property="Padding" Value="6,0"/>
    </Style>

    <Style x:Key="DefaultButtonStyle" TargetType="Button" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">

        <Style.Triggers>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}"/>

    <Style x:Key="BorderedButtonStyle" TargetType="Button" BasedOn="{StaticResource DefaultButtonStyle}">
        <Setter Property="Height" Value="32"/>
        <Setter Property="MinWidth" Value="90"/>
        <Setter Property="Margin" Value="6"/>
        <Setter Property="BorderBrush" Value="{StaticResource DefaultBorderBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource DefaultForegroundBrush}"/>
    </Style>

    <Style x:Key="StatusBarButtonStyle" TargetType="Button">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0,1,0,1"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Foreground" Value="{StaticResource DefaultForegroundBrush}"/>
        <Setter Property="Padding" Value="3"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}"
                        Padding="{TemplateBinding Padding}">

                        <ContentPresenter
                            TextElement.Foreground="{TemplateBinding Foreground}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>

                    </Border>
                    
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{StaticResource SelectorBackgroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                <Setter Property="Opacity" Value="0.5"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <!-- Style for a tool bar style button. -->
    <!--<Style TargetType="Button" x:Key="ToolBarButton" BasedOn="{StaticResource {x:Static ToolBar.ButtonStyleKey}}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Margin" Value="0,0,-2,0" />
        <Setter Property="FontFamily" Value="Courier" />
        <Setter Property="FontSize" Value="10" />
        <Setter Property="Foreground" Value="DarkGray" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
        <Setter Property="MaxWidth" Value="32" />
        <Setter Property="MaxHeight" Value="32" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border Background="{TemplateBinding Background}" BorderThickness="0" CornerRadius="2">
                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="Teal"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->

    <!--<Style TargetType="Button" x:Key="MainMenuButton" BasedOn="{StaticResource ToolBarButton}">
        <Setter Property="Foreground" Value="DarkBlue" />
        <Setter Property="FontWeight" Value="Normal" />
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="#FFEEEEEE"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->


    <!-- Style used for a Button's border -->
    <!--<Style TargetType="Border" x:Key="ButtonBorder">
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="CornerRadius" Value="4"/>
        <Setter Property="Background" Value="{StaticResource NormalBrush}"/>
        <Setter Property="BorderBrush" Value="{StaticResource NormalBorderBrush}"/>
    </Style>-->

    <!-- Base style for Button -->
    <!--<Style TargetType="Button" BasedOn="{StaticResource BaseControl}">
        <Setter Property="SnapsToDevicePixels" Value="true"/>
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="FocusVisualStyle" Value="{x:Null}" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Foreground" Value="MidnightBlue" />
        --><!--<Setter Property="MinWidth" Value="{StaticResource MinButtonWidth}" />--><!--
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="Border" Style="{StaticResource ButtonBorder}">
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsKeyboardFocused" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsDefaulted" Value="True">
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DefaultedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DarkBrush}" />
                            <Setter Property="Foreground" Value="Red" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource PressedBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource PressedBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource DisabledBackgroundBrush}" />
                            <Setter TargetName="Border" Property="BorderBrush" Value="{StaticResource DisabledBorderBrush}" />
                            <Setter Property="Foreground" Value="{StaticResource DisabledForegroundBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>-->

</ResourceDictionary>