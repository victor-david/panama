<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:tk="http://schemas.restless.toolkit.com/2021"
    xmlns:core="clr-namespace:Restless.Panama.Core">

    <Style x:Key="TitleDataGridRowStyle" TargetType="DataGridRow">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding CalcIsPublished}" Value="True"/>
                    <Condition Binding="{Binding Path=DataContext.Config.Colors.TitlePublished.HasBackground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{Binding DataContext.Config.Colors.TitlePublished.BackgroundBrush,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding CalcIsPublished}" Value="True"/>
                    <Condition Binding="{Binding Path=DataContext.Config.Colors.TitlePublished.HasForeground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Foreground" Value="{Binding DataContext.Config.Colors.TitlePublished.ForegroundBrush,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}" />                    
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding CalcIsSelfPublished}" Value="True"/>
                    <Condition Binding="{Binding Path=DataContext.Config.Colors.TitleSelfPublished.HasBackground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{Binding DataContext.Config.Colors.TitleSelfPublished.BackgroundBrush,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding CalcIsSelfPublished}" Value="True"/>
                    <Condition Binding="{Binding Path=DataContext.Config.Colors.TitleSelfPublished.HasForeground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Foreground" Value="{Binding DataContext.Config.Colors.TitleSelfPublished.ForegroundBrush,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding CalcIsSubmitted}" Value="True"/>
                    <Condition Binding="{Binding Path=DataContext.Config.Colors.TitleSubmitted.HasBackground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{Binding DataContext.Config.Colors.TitleSubmitted.BackgroundBrush,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding CalcIsSubmitted}" Value="True"/>
                    <Condition Binding="{Binding Path=DataContext.Config.Colors.TitleSubmitted.HasForeground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Foreground" Value="{Binding DataContext.Config.Colors.TitleSubmitted.ForegroundBrush,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="PublisherDataGridRowStyle" TargetType="DataGridRow">
        <Style.Triggers>
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding CalcInPeriod}" Value="True"/>
                    <Condition Binding="{Binding Path=DataContext.Config.Colors.PublisherPeriod.HasBackground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{Binding DataContext.Config.Colors.PublisherPeriod.BackgroundBrush,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding CalcInPeriod}" Value="True"/>
                    <Condition Binding="{Binding Path=DataContext.Config.Colors.PublisherPeriod.HasForeground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Foreground" Value="{Binding DataContext.Config.Colors.PublisherPeriod.ForegroundBrush,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>

            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding goner}" Value="True"/>
                    <Condition Binding="{Binding Path=DataContext.Config.Colors.PublisherGoner.HasBackground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Background" Value="{Binding DataContext.Config.Colors.PublisherGoner.BackgroundBrush,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>            
            
            <MultiDataTrigger>
                <MultiDataTrigger.Conditions>
                    <Condition Binding="{Binding goner}" Value="True"/>
                    <Condition Binding="{Binding Path=DataContext.Config.Colors.PublisherGoner.HasForeground,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}" Value="True" />
                </MultiDataTrigger.Conditions>
                <MultiDataTrigger.Setters>
                    <Setter Property="Foreground" Value="{Binding DataContext.Config.Colors.PublisherGoner.ForegroundBrush,RelativeSource={RelativeSource Mode=FindAncestor,AncestorType=DataGrid}}" />
                </MultiDataTrigger.Setters>
            </MultiDataTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DefaultDataGridStyle" TargetType="DataGrid" BasedOn="{StaticResource DefaultControlStyle}">
        <Setter Property="Foreground" Value="{StaticResource DarkForegroundBrush}"/>
        <Setter Property="Background" Value="{StaticResource DefaultBackgroundBrush}"/>
        <Setter Property="FontSize" Value="{StaticResource MediumFontSize}"/>
        <Setter Property="ColumnWidth" Value="*"/>
        <Setter Property="MinRowHeight" Value="{x:Static core:Config+DataGrid.MinRowHeight}"/>
        <Setter Property="BorderBrush" Value="{StaticResource DefaultBorderBrush}" />
        <Setter Property="GridLinesVisibility" Value="None"/>
        <Setter Property="HeadersVisibility" Value="Column"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="AlternationCount" Value="{Binding Config.DataGridAlternationCount}"/>
        <Setter Property="AlternatingRowBackground" Value="{Binding Config.Colors.DataGridAlternation.BackgroundBrush}"/>
        <Setter Property="CellStyle">
            <Setter.Value>
                <Style TargetType="DataGridCell">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type DataGridCell}">
                                <Grid Background="{TemplateBinding Background}">
                                    <ContentPresenter VerticalAlignment="Center" />
                                </Grid>
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="DataGrid" BasedOn="{StaticResource DefaultDataGridStyle}"/>
    <Style TargetType="tk:DataGrid" BasedOn="{StaticResource DefaultDataGridStyle}"/>

    <Style x:Key="DataGridEditStyle" TargetType="DataGrid" BasedOn="{StaticResource DefaultDataGridStyle}">
        <Setter Property="MinHeight" Value="100" />
        <Setter Property="MaxHeight" Value="260" />
        <Setter Property="RowHeight" Value="{x:Static core:Config+DataGrid.MinRowHeight}"/>
        <Setter Property="AlternationCount" Value="2"/>
    </Style>

    <Style x:Key="DataGridEditLockedStyle" TargetType="DataGrid" BasedOn="{StaticResource DataGridEditStyle}">
        <Setter Property="CanUserSortColumns" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="False"/>
    </Style>

    <!-- Bit of a kluge. But otherwise, the DataGrid's context menu also pops up if you right click the header row-->
    <Style x:Key="DefaultDataGridColumnHeaderStyle" TargetType="DataGridColumnHeader">
        <Setter Property="ContextMenu">
            <Setter.Value>
                <ContextMenu Visibility="Collapsed" IsEnabled="False"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground" Value="{StaticResource DefaultHeaderForegroundBrush}"/>
    </Style>

    <Style TargetType="DataGridColumnHeader" BasedOn="{StaticResource DefaultDataGridColumnHeaderStyle}"/>

    <!-- Backward compatibility TODO: remove -->
    <Style x:Key="DataGridHeaderCenter" TargetType="DataGridColumnHeader" BasedOn="{StaticResource DefaultDataGridColumnHeaderStyle}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    
    <Style x:Key="CenterDataGridColumnHeaderStyle" TargetType="DataGridColumnHeader" BasedOn="{StaticResource DefaultDataGridColumnHeaderStyle}">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>

    <!--<Style x:Key="CenterDataGridCellStyle" TargetType="DataGridCell">
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
    </Style>-->

</ResourceDictionary>