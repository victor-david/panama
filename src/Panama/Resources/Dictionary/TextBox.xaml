<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    
    <Style x:Key="TextBoxMultiStyle" TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxStyle}">
        <Setter Property="Margin" Value="{StaticResource DataEntryPanelDefaultControlMargin}"/>
        <Setter Property="AcceptsReturn" Value="True" />
        <Setter Property="TextWrapping" Value="Wrap" />
        <Setter Property="MinHeight" Value="220"/>
        <Setter Property="VerticalContentAlignment" Value="Top"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
    </Style>

    <Style x:Key="TextBoxMultiStretchStyle" TargetType="TextBox" BasedOn="{StaticResource TextBoxMultiStyle}">
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>
    
    <!-- Styles a read-only text box so it's like a label. -->
    <Style x:Key="TextBoxLabel" TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxStyle}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="BorderThickness" Value="0" />
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Foreground" Value="#FF802020" />
        <Setter Property="TextWrapping" Value="NoWrap" />
        <!-- need to override triggers in base TextBox style -->
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="Foreground" Value="#FF802020" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <!--<Style x:Key="TextBoxFolderName" TargetType="TextBox" BasedOn="{StaticResource DefaultTextBoxStyle}">
        <Setter Property="IsReadOnly" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="TextWrapping" Value="NoWrap" />
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="0,2"/>
        <Style.Triggers>
            <Trigger Property="IsReadOnly" Value="True">
                <Setter Property="Foreground" Value="{StaticResource}" />
                <Setter Property="Background" Value="{StaticResource}"/>
            </Trigger>
        </Style.Triggers>
    </Style>-->






    <!--STYLES INVOLVED IN CREATING INPUT HINT -->

    <!-- Style for text box that receives a hint from a TextBlock behind it -->
    <Style TargetType="TextBox" x:Key="TextBoxWithHint" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- This sits behind simply to maintain the background -->
    <Style TargetType="TextBox" x:Key="TextBoxWithHintBack" BasedOn="{StaticResource {x:Type TextBox}}">
        <Setter Property="Margin" Value="0" />
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <!-- Style for a TextBlock that acts as an input prompt -->
    <Style TargetType="TextBlock" x:Key="TextBlockInputPrompt" BasedOn="{StaticResource {x:Type TextBlock}}">
        <Setter Property="Foreground" Value="LightGray" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="HorizontalAlignment" Value="Left"/>
        <Setter Property="Margin" Value="6,8,0,0"/>
    </Style>

    <!-- /END:STYLES INVOLVED IN CREATING INPUT HINT  -->


</ResourceDictionary>